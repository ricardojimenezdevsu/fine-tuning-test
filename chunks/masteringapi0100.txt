user journey, or it misrepresents metrics.  End-to-end testing is more complex than any other type of testing as it takes resources to create and maintain. Though it can be a time saver over doing end-to-end manual testing, it provides confidence in the application and evidence that services were working from a technical standpoint to meet service agreements.      ADR Guideline: End-to-End Testing   Knowing what to include, and whether end-to-end testing is worthwhile for your case, are important considerations. The ADR Guidelines in Table 2-4 should help you make a decision.  Table 2-4. ADR Guideline: End-to-End Testing Decision  As part of your testing setup, should you use automated end-to-end tests?    Discussion Points  Determine how complex your setup is to enable end-to-end testing. Do you have a good idea of end-to-end tests that you require and will provide value? Are there any specific requirements or more advanced end-to-end tests that you should add?      Recommendations  We recommend that you do perform at a minimum end-to-end testing on core user journeys. This is going to give feedback as early as possible in your development cycle that a user could be impacted with the changes that have been made. Ideally you can run these end-to-end tests locally; however, if not, then it should be part of your build pipeline.  End-to-end testing is valuable but must be balanced against the time investment you need to get it running. If it is not possible to do automated end-