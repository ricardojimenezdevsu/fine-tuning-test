organizational department. In this context these gateways would more typically be separate implementations and may offer differing functionality depending on geographical location (e.g., required governance) or infrastructure capabilities (e.g., running on low-powered edge compute resources).  Figure 3-3 shows how an API gateway often sits between the public internet and the demilitarized zone (DMZ) of a private network.      Figure 3-3. A typical large/enterprise API gateway deployment      As you will learn later in this chapter, the definition and exact functionality offered within an API gateway isn’t always consistent across implementations, and so the preceding diagrams should be thought of as more conceptual rather than an exact implementation.      How Does an API Gateway Integrate with Other Technologies at the Edge?   There are typically many components deployed at the edge of an API-based system. This is where the consumers and users first interact with the backend, and hence many cross-cutting concerns are best addressed here. Therefore, a modern edge technology stack or “edge stack” provides a range of functionality that meets essential cross-functional requirements for API-based applications. In some edge stacks each piece of functionality is provided by a separately deployed and operated component, and in others the functionality and/or components are combined. You will learn more about the individual requirements in the next section of the chapter, but for the