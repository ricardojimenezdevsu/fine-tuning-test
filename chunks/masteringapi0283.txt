to keep asking the user to enter a username and password.    OAuth2 scopes help to provide coarse-grained authorization and allow the end user to configure the access of a client.    OIDC is used when the client requires information about the end user. OIDC provides basic information about the authenticated user and can optionally provide additional details.      Fundamentally, you should now understand how you can identify an API callee and how you can secure your own APIs. However, this is not the end of the journey, as the majority of software architectures don’t stay still. You will learn about evolutionary architecture with APIs in the next chapter.      1 If you do not know what HTTP Basic is, refer to the spec rfc7617.  2 The request header is either a custom header (e.g., X-API-KEY: My_super_secret_API_Key) or the authorization header.  3 Google has a good piece on this here.  4 An email or username is normally not a good choice as users modify these over time. Having a consistent identifier is simpler to manage.  5 A typical scenario is when you are using LinkedIn and LinkedIn asks to access your GMail contacts. LinkedIn redirects you to Google and you log in to your Google account. You are then presented with a message saying “LinkedIn would like to access your email contacts.” After you accept, LinkedIn can access your emails.  6 If you want to look further at adding even more security to the client application getting access tokens, see RFC8705. This specification