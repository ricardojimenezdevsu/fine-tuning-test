Table 2-3. ADR Guideline: Integration testing Decision  Should integration testing be added to API testing?    Discussion Points  If your API is integrating with any other service, what level of integration test should you use?  Do you feel confident that you can just mock responses and do not need to perform integration tests?    For creating a stub server to test against, are you able to accurately craft the request and responses or should they be recorded?    Will you be able to keep stub servers up-to-date and recognize if an interaction is incorrect?      If your stubs are incorrect or become out of date, this means it is possible to have tests that pass against your stub server, but when you deploy to production, your service fails to interact with the other API as it has changed.      Recommendations  We do recommend using the generated stub servers from contract tests. However, if this is not available, then having integration testing using recordings of interactions is the next best option. Having integration tests that can be run locally gives confidence that an integration will work, especially when refactoring an integration; it will help to ensure that any changes have not broken anything.      Integration testing is a really useful tool; however, definitions of these interactions have issues. The main issue is that they are point-in-time snapshots. These bespoke setups do not get updated with changes.  We have been using stub servers for the integrations we have