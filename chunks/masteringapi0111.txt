moment Figure 3-4 should highlight the key layers of a modern edge stack.  These layers should not be treated as a monolithic component. They are typically deployed separately and may be owned and operated by individual teams or third-party service providers. Several API gateways provide all of the functionality within an edge stack. Others simply focus on the API gateway functionality and API management. It is also common within cloud environments that the cloud vendor will provide a load balancer that can be integrated with an API gateway.      Figure 3-4. A modern edge stack      Now that you have a good idea about the “what” and “where” of an API gateway, let’s now look at why an organization would use an API gateway.      Why Use an API Gateway?   A big part of the modern software architect’s role is asking the hard questions about design and implementation. This is no different when dealing with APIs and traffic management and related technologies. You need to balance both short-term implementation and long-term maintainability. There are many API-related cross-cutting concerns that you might have, including maintainability, extensibility, security, observability, product lifecycle management, and monetization. An API gateway can help with all of these!  This section of the chapter will provide you with an overview of the key problems that an API gateway can address, such as:  Reducing coupling by using an adapter/facade between frontends and backends    Simplifying