(e.g., financial or government systems), this is most likely not. Be sure to challenge assumptions in your current security configuration.      Detecting and Owning Problems   The first stage in detecting issues is ensuring that you are collecting and have access to appropriate signals from your monitoring system—i.e., data from metrics, logs, and traces. Any critical system should have a clearly defined team that owns it and is accountable for any issues. Teams should communicate service-level objectives (SLOs), which can be codified into service-level agreements (SLAs) for both internal and external customers.      Additional Reading: Observability, Alerting, and SRE   If you are new to the concept of observability, then we recommend learning more about Brendan Gregg’s utilization, saturation, and errors (USE) method, Tom Wilkie’s rate, errors, and duration (RED) method, and Google’s four golden signals of monitoring. If you want to learn more about associated organizational goals and processes, the Google Site Reliability Engineering (SRE) book is highly recommended.      Resolving Incidents and Issues   First and foremost, each API gateway operating within your system needs an owner that is accountable if anything goes wrong with the component. In a smaller organization this may be the developers or SRE team who are also responsible for the underlying services. In a larger organization this may be a dedicated infrastructure team. As an API gateway is on the critical path