(e.g., WAF, LB, edge cache, etc.)?  Focus on technology skill levels within your team, availability of people to work on an API gateway project, and available resources and budget, etc.  It is important to identify all planning changes, new features, and current goals that could impact traffic management and the other functionality that an API gateway provides.  Calculate the total cost of ownership (TCO) of all of the current API gateway-like implementations and potential future solutions.  Consult with well-known analysts, trend reports, and product reviews in order to understand all of the current solutions available.  Selecting and deploying an API gateway will impact many teams and individuals. Be sure to consult with the developers, QA, the architecture review board, the platform team, InfoSec, etc.      Summary   In this chapter, you have learned what an API gateway is and also explored the historical context that led to the evolution of the features currently provided by this essential component in any web-based software stack:  You have learned how an API gateway is a very useful tool for migrating and evolving systems and have gotten hands-on with how to use an API gateway to route to the Attendee service that was extracted from the conference system use case.    You have explored the current taxonomy of API gateways and their deployment models, which has equipped you to think about how to manage potential single points of failure in an architecture where all user