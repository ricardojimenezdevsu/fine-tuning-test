(TCO) of all of the current service meshlike implementations and potential future solutions.  Consult with well-known analysts, trend reports, and product reviews in order to understand all of the current solutions available.  Selecting and deploying a service mesh will impact many teams and individuals. Be sure to consult with development teams, QA, the architecture review board, the platform team, InfoSec, etc.      Summary   In this chapter you have learned what a service mesh is and explored what functionality, benefits, and challenges adopting this pattern and associated technologies provides:  Fundamentally, “service mesh” is a pattern for managing all service-to-service communication within a distributed software system.    At a network level, a service mesh proxy acts as a full proxy, accepting all inbound traffic from other services and also initiating all outbound requests to other services.    A service mesh is deployed within an internal network or cluster. Large systems or networks are typically managed by deploying several instances of a service mesh, often with each single mesh spanning a network segment or business domain.    A service mesh may expose endpoints within a network demilitarized zone (DMZ), or to external systems, or additional networks or clusters, but this is frequently implemented by using an “ingress,” “terminating,” or “transit” gateway.    There are many API-related cross-cutting concerns that you might have for each or all of your internal