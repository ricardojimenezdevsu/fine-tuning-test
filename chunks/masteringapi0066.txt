decision in the product feature set and a mechanism to convey versioning to consumers should be part of the discussion.    gRPC performs incredibly well in high-bandwidth exchanges and is an ideal option for eastâ€“west exchanges. Tooling for gRPC is powerful and provides another option when modeling exchanges.    Modeling multiple specifications starts to become quite tricky, especially when generating from one type of specification to another. Versioning complicates matters further but is an important factor to avoid breaking changes. Teams should think carefully before combining RPC representations with RESTful API representations, as there are fundamental differences in terms of usage and control over the consumer code.      The challenge for an API architecture is to meet the requirements from a consumer business perspective, to create a great developer experience around APIs, and to avoid unexpected compatibility issues. In Chapter 2 you will explore testing, which is essential in ensuring services meet these objectives.      1 We have been in this situation many times, usually first thing on a Monday!  2 Validation of OpenAPI Specifications at runtime helps enforce a greater strictness.      Chapter 2. Testing APIs   Chapter 1 covered the different types of APIs and the value that they provide to your architecture. This chapter closes out the Designing, Building, and Testing APIs section of this book by reviewing approaches to testing APIs. The new Attendee API that was