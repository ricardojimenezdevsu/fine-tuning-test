all” policy where all traffic is denied and only specific connections are enabled:   apiVersion: consul.hashicorp.com/v1alpha1 kind: ServiceIntentions metadata: name: deny-all spec: destination: name: '*' sources: - name: '*' action: deny  By specifying the wildcard character (*) in the destination field, this intention will prevent all service-to-service communication. Once you have defined the default policy as deny all, you can authorize traffic between the conference system legacy service, the Attendee service, and the Session service by defining a ServiceIntentions CRD for each required service interaction. For example:   --- apiVersion: consul.hashicorp.com/v1alpha1 kind: ServiceIntentions metadata: name: legacy-app-to-attendee spec: destination: name: attendee sources: - name: legacy-conf-app action: allow --- apiVersion: consul.hashicorp.com/v1alpha1 kind: ServiceIntentions metadata: name: legacy-app-to-sessions spec: destination: name: sessions sources: - name: legacy-conf-app action: allow --- apiVersion: consul.hashicorp.com/v1alpha1 kind: ServiceIntentions metadata: name: attendee-to-sessions spec: destination: name: sessions sources: - name: attendee action: allow --- apiVersion: consul.hashicorp.com/v1alpha1 kind: ServiceIntentions metadata: name: sessions-to-attendee spec: destination: name: attendee sources: - name: sessions action: allow  Applying this configuration to the Kubernetes cluster will enable these interactions—and only these service-to-service