about organizational design, but we wanted to mention the importance of this in relation to designing, building, and running APIs. “Conway’s Law” has become famous within the microservice community, and the concept also applies to API architecture:  Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization’s communication structure.  Melvin Conway in How Do Committees Invent?    Or, put more succinctly, “if you have four groups working on a compiler, you’ll get a 4-pass compiler.” We have definitely seen this in the API world—as we like to joke, “if you have four groups working on a microservice system, you’ll get four layers of APIs.” We couldn’t hope to cover the topic of organizational design in the depth it deserves in this book, and so instead we would like to recommend you read the following books:  Team Topologies (IT Revolution Press)    Agile IT Organization Design: For Digital Transformation and Continuous Delivery (Addison-Wesley)    The Art of Scalability (Addison-Wesley)      If you are looking to undertake a major organizational shift or “digital transformation,” we strongly recommend consulting the preceding works. Any API-based system is inherently a socio-technical system, and so you should always factor in the “socio” aspect as much as the “technical.”      Understanding Decision Types   Jeff Bezos, the founder of Amazon, is famous for many things, and one of them is his discussion of Type 1