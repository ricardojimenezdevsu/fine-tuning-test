The contents of the token are visible to anyone who receives the token; however, the claims are digitally signed, which ensures that if the contents of the token are changed, the token is immediately invalid.    JSON Web Encryption (JWE) provides integrity but is also encrypted. This means that the contents of the token cannot be examined.      Note   Generally, when JWT is used, that implies JWT using JWS, and Encrypted JWT means JWT using JWE.    The most common mechanism used is JWS, where the digital signing is performed using a private key. The public key is used by the receiver of the token to validate that the token was signed by the specific issuing party. The public key is freely shared with any party that needs to verify the integrity of the token.      Warning   If you’re using JWT with JWS, you should not insert confidential data into the claim values. JWS provides integrity to the claims; however, anyone who has the JWT can read the claims. To ensure the JWT can’t be read, use JWE.    JWTs are a great option for a token format. API services consume the JWT, validate it by verifying the signature, and do not need to look up a token in a database. As the access token will be from an authorization server that is (most likely) under your control, you can add all the information you expect/require to your JWT.  When the JWT is received, there are multiple parts to verify. First, the signature is checked to confirm that it was issued from the expected party and has not