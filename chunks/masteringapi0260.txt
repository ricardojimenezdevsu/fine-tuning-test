behalf, it means handing over your username and password.1 We recommend that you do not allow HTTP Basic to be used to access your APIs.      System-to-System Authentication   In some situations an end user is not involved in the interaction and system-to-system communication is required. One option would be to use an API key, which does not conform to any particular standard. Whenever you do use an API key, it should be secure, meaning that it should be generated using a cryptographically secure random number generator and of an unguessable length. Typically API keys are 32-character-length strings (256 bits). If the API key is guessable (short and deterministic), this creates a vulnerability of a client being hacked. To access an API with an API key, you simply add the API key into a request header and send it to the endpoint.2 The API key is associated with an application or project, so it is possible to identify the requester.3 Using an API key is very similar to using a password. Figure 7-3 demonstrates an example of using an API key as part of a request.      Figure 7-3. External CFP system calling Attendee API with an API key      Why You Shouldn’t Mix Keys and Users   Consider the scenario where a speaker is using the CFP system, owned by a third party, and the CFP is requesting an update to the email address associated with that user’s data. Just because the CFP system is using an API key and can be identified does not mean that this third-party system should be able