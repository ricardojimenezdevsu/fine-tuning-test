capabilities with service meshes (especially those built using the same proxy technology) are typically good.      Service Mesh Gateways   The ingress or API gateway included with a service mesh is typically designed to provide only the core functionality of routing external traffic into the mesh. For this reason they often lack some of the typical enterprise features, such as comprehensive integration with authentication and identity provider solutions, and also integration with other security features, such as a WAF.  The service mesh gateway typically manages state using its own internal implementation or that provided by the platform (e.g., Kubernetes). This type of gateway is also implicitly coupled with the associated service mesh (and operational requirements), and so if you are not yet planning to deploy a service mesh, then this is most likely not a good first choice of API gateway.      Comparing API Gateway Types   Table 3-3 highlights the difference between the three most widely deployed API gateway types across six important criteria.  Table 3-3. Comparison of enterprise, microservices, and service mesh API gateway Use case Traditional enterprise API gateway Microservices API gateway Service mesh gateway  Primary Purpose  Expose, compose, and manage internal business APIs and associated services.  Expose, compose, and manage internal business services.  Expose internal services within the mesh.    Publishing Functionality  API management team or service team