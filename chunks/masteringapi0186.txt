access to Linkerd’s observability features, you only need to install the viz extension and open the dashboard using your local browser:   linkerd viz install | kubectl apply -f - linkerd viz dashboard  This provides access to service graphs showing traffic flow. In Figure 4-10, you can see traffic flowing across the mesh from the webapp to the book and authors services.      Figure 4-10. Using Linkerd viz to observe traffic flow between services      You can also view the top-line traffic metrics using the prebuilt Grafana dashboards, as shown in Figure 4-11.      Figure 4-11. Viewing the Linkerd viz Grafana dashboards      Using a service mesh to provide observability into your applications is useful during both development and production. Although you should always automate detection of invalid service-to-service traffic in production, you can also use this service mesh observability tooling to identify when internal APIs or services are being called incorrectly. Let’s now explore using policy to specify exactly which services can communicate with each other in the service mesh using HashiCorp’s Consul.      Network Segmentation with Consul   You can install and configure Consul as a service mesh within a Kubernetes cluster by following the “Getting Started with Consul Service Mesh for Kubernetes” guide. Before microservices, authorization of interservice communication was primarily enforced using firewall rules and routing tables. Consul simplifies the management of