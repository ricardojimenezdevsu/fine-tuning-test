designed by Praerit Garg and Loren Kohnfelder at Microsoft. Youâ€™ll learn more about this methodology later in the chapter.  Threat modeling of software systems has historically been performed using data flow diagrams (DFDs).4 DFDs capture the dynamic (data flow) aspects of a system, while C4 models primarily capture the static (structural) aspects of the system. DFDs are simple to understand and data-centric, which makes it easy to see how data flows through the system. The core components for DFDs are:  External entities  These are applications/services that are not part of your system. In our case this would be the mobile application.    Processes  An application/task that is in our domain, such as the API gateway.    Datastores  A location where data is stored. For the case study, this would be the database.    Data flows  Connection that represents the flow of data, such as the mobile application to the API gateway.    Boundaries  A privileged or trust boundary to show a change in trust levels. A boundary for the case study would be the internet boundary between the mobile application to the API gateway.      As part of our threat modeling, we have created a DFD as shown in Figure 6-2.      Thinking Like an Attacker   Architects and development teams can at times be reluctant to consider security issues, as they believe this is the job of a specialist team. However, who better than the people designing and building the key structural components of a software system to