Identifying Change Leverage Points within a System  end state architectures, End State Architecture Options-Functions  fitness functions, Using Fitness Functions-Using Fitness Functions  goal setting, Determine Your Goals-Determine Your Goals  module design, Decomposing a System into Modules-Decomposing a System into Modules  pain points and opportunities, Identifying Pain Points and Opportunities-Breaking Dependencies: Highly Coupled APIs  process management, Managing the Evolutionary Process-Continuous Delivery and Verification  seams for extension, Creating APIs as “Seams” for Extension-Creating APIs as “Seams” for Extension      modeling, From Tiered Architecture to Modeling APIs  multiformat APIs, Multiple Specifications-Challenges of Combined Specifications  REST (see REST)  testing (see testing APIs)  versioningOAS and, OpenAPI Specification and Versioning-OpenAPI Specification and Versioning  options for, API Versioning-API Versioning  semantic versioning, Semantic Versioning      application delivery controllers (ADCs), Mid-2000s: Application Delivery Controllers (ADCs)  application programming interfaces (see APIs)  application-level decisions for release, Application Decisions for Effective Software Releases-ADR Guideline: Opinionated Platforms  applications (see systems)  architectural patterns, Architectural Patterns for Evolving Systems with APIs-API Layer Cake  architecture decision records (see ADRs)  Argo Rollouts, Case Study: Performing Rollouts with Argo