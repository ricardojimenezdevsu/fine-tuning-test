the request to the attendees v1.1 service. In Figure 5-3 the before and deployment stages are identical to the canary release; often dark deployment is referred to as a specialized canary.      Figure 5-3. Deploying the Attendee service using a traffic mirroring approach      Implementing traffic mirroring at the edge of systems has become increasingly popular over the years, and now a service mesh enables this to be implemented effectively and consistently across internal services. Continuing the example of releasing a new version of the Attendee service that implements internal caching, dark launching this service would allow you to assess the operational performance of the release but not the business impact.      Blue-Green   Blue-green is usually implemented at a point in the architecture that uses a router, gateway, or load balancer, behind which sits a complete blue environment and a green environment. The current blue environment represents the current live environment, and the green environment represents the next version of the stack. The green environment is checked prior to switching to live traffic, and at go live the traffic is flipped over from blue to green. The blue environment is now “off,” but if a problem is spotted it is a quick rollback. The next change would go from green to blue, oscillating from first release onward.  In Figure 5-4 the legacy conference service and Attendee service are both at v1.0 and represent our blue model. During deployment we