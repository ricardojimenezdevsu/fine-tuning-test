You may not be pushing code to production each day, but we recommend carving out time in your schedule to periodically pair with an engineer on your team or conduct research and experiment with the latest technologies. Without doing this regularly, it is easy for an architect’s empathy for developers to fade. Doing this work also enables you to understand new friction points or a toil that may have been introduced by the adoption of new technologies. For example, anecdotally we found that many architects initially misunderstood the impact that container technology would have on developer toolchains. Unless you have experience in building container images and pushing them to a remote registry, it’s easy to discount the impact of these actions on your daily workflow of building and maintaining APIs.      Learning by Teaching   As is hopefully evident from this book, we also learn a lot through the act of teaching. Whether this is writing books, teaching courses, or presenting at conferences, nothing beats the experience of assembling the information required to teach a concept. All too often we realize during this process that we don’t quite understand a concept, or when asked a question by a student we suddenly appreciate that there is a gap in our understanding.  It is our opinion that another core role of an architect is teaching. Whether it’s educating developers about the fundamentals or sharing new best practices, this act of teaching will continually reinforce your skill